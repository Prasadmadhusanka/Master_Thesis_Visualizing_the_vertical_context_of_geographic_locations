bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 200
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "average_time"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 200
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "average_time"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 60
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 02", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 60
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 60
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 90
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 02", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 90
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 90
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 120
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 02", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 120
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 120
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 150
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 02", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 150
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 150
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 180
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 02", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 180
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 180
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 200
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 02", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 200
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 200
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "accuracy"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 60
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 02", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 60
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 60
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 90
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 02", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 90
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 90
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 120
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 02", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 120
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 120
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 150
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 02", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 150
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 150
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 180
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 02", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 180
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 180
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 200
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 02", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 200
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 0^3", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 200
approach_A <- paste("Visualization Approach 01", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
attribute_level <- 200
approach_A <- paste("Visualization Approach 02", attribute_level, sep = "_")
approach_B <- paste("Visualization Approach 03", attribute_level, sep = "_")
parameter <- "usefulness"
group_column <- "visualization_approach_attribute_level"
# Subset data for the two values you want to compare
subset_data <- data %>% filter(visualization_approach_attribute_level %in% c(approach_A, approach_B))
# comparison
bootES(data, R=N_resamples, data.col=parameter, group.col=group_column, contrast= c(approach_A, approach_B))
subset_data1 <- data %>% filter(visualization_approach_attribute_level %in% c(paste("Visualization Approach 01", attribute_level, sep = "_"), paste("Visualization Approach 02", attribute_level, sep = "_"), paste("Visualization Approach 03", attribute_level, sep = "_")))
ggplot(subset_data1, aes(y = !!sym(parameter), x= !!sym(group_column), fill=!!sym(group_column))) +
geom_boxplot() +  scale_fill_manual(values = c(color1, color2, color3))+
ggtitle(paste(group_column, parameter, sep = " VS "))
